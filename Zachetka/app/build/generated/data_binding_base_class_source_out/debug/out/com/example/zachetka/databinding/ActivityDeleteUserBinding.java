// Generated by view binder compiler. Do not edit!
package com.example.zachetka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.zachetka.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDeleteUserBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnDeleteUser;

  @NonNull
  public final TextView editModeTextDelete;

  @NonNull
  public final Spinner spinnerUserDelete;

  private ActivityDeleteUserBinding(@NonNull RelativeLayout rootView, @NonNull Button btnDeleteUser,
      @NonNull TextView editModeTextDelete, @NonNull Spinner spinnerUserDelete) {
    this.rootView = rootView;
    this.btnDeleteUser = btnDeleteUser;
    this.editModeTextDelete = editModeTextDelete;
    this.spinnerUserDelete = spinnerUserDelete;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDeleteUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDeleteUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_delete_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDeleteUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete_user;
      Button btnDeleteUser = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteUser == null) {
        break missingId;
      }

      id = R.id.edit_mode_text_delete;
      TextView editModeTextDelete = ViewBindings.findChildViewById(rootView, id);
      if (editModeTextDelete == null) {
        break missingId;
      }

      id = R.id.spinnerUserDelete;
      Spinner spinnerUserDelete = ViewBindings.findChildViewById(rootView, id);
      if (spinnerUserDelete == null) {
        break missingId;
      }

      return new ActivityDeleteUserBinding((RelativeLayout) rootView, btnDeleteUser,
          editModeTextDelete, spinnerUserDelete);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
